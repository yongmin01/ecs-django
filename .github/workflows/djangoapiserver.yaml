name: django

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: build and release to DockerHub
        env:
          NAME: ${{ secrets.DOCKERHUB_USERNAME }}
          REPO: djangoapiserver
        run: |
          docker build -t $REPO .
          docker tag $REPO:latest $NAME/$REPO:latest
          docker push $NAME/$REPO:latest

      - name: Decode SSH Key
        run: |
          echo "${{ secrets.EC2_KEY }}" | base64 -d > ec2-key.pem
          chmod 600 ec2-key.pem
      
      - name: Connect to EC2 and Deployment
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            if [ "$(docker ps -a -q -f name=^/djangoapiserver)" ]; then
              echo "컨테이너 있음"
              docker stop djangoapiserver
              docker rmi yongmin01/djangoapiserver
            else
              echo "컨테이너 없음"
            fi

            docker run --name djangoapiserver -d -p 80:80 --rm yongmin01/djangoapiserver
          EOF